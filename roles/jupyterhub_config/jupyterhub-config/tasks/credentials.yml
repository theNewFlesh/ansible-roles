---
- name: ensure jupyterhub private key, public key and certificate are present
  file:
    dest: "{{ _jhc_dir }}/{{ item }}"
    state: absent
  with_items:
    - jupyterhub.key
    - jupyterhub.csr
    - jupyterhub.crt

- name: ensure jupyterhub private key is present
  shell: "openssl genrsa -passout pass:{{ jhc_password }} -out jupyterhub.key"
  args:
    chdir: "{{ _jhc_dir }}"
    creates: "{{ _jhc_dir }}/jupyterhub.key"

- name: ensure proper owner, group and permissions for private key
  file:
    dest: "{{ _jhc_dir }}/jupyterhub.key"
    mode: 0600
    owner: "{{ jhc_admin }}"
    group: "{{ jhc_admin_group }}"
    state: file

- name: ensure jupyterhub csr is present
  shell: "openssl req -new -key jupyterhub.key -out jupyterhub.csr -nodes -subj '{{ _jhc_cert_data }}'"
  args:
    chdir: "{{ _jhc_dir }}"
    creates: "{{ _jhc_dir }}/jupyterhub.csr"

- name: ensure proper owner, group and permissions for csr
  file:
    dest: "{{ _jhc_dir }}/jupyterhub.csr"
    mode: 0600
    owner: "{{ jhc_admin }}"
    group: "{{ jhc_admin_group }}"
    state: file

- name: ensure jupyterhub crt is present
  shell: openssl x509 -req -in jupyterhub.csr -signkey jupyterhub.key -out jupyterhub.crt
  args:
    chdir: "{{ _jhc_dir }}"
    creates: "{{ _jhc_dir }}/jupyterhub.crt"

- name: ensure proper owner, group and permissions for crt
  file:
    dest: "{{ _jhc_dir }}/jupyterhub.crt"
    mode: 0600
    owner: "{{ jhc_admin }}"
    group: "{{ jhc_admin_group }}"
    state: file
